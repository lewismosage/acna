# Generated by Django 5.2.5 on 2025-09-16 17:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(choices=[('MessageSquare', 'Message Square'), ('Users', 'Users'), ('Star', 'Star'), ('TrendingUp', 'Trending Up'), ('Calendar', 'Calendar'), ('MessageCircle', 'Message Circle')], default='MessageSquare', max_length=50)),
                ('color', models.CharField(choices=[('blue', 'Blue'), ('green', 'Green'), ('purple', 'Purple'), ('orange', 'Orange'), ('teal', 'Teal'), ('red', 'Red')], default='blue', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Forum Categories',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ForumThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, validators=[django.core.validators.MinLengthValidator(5)])),
                ('slug', models.SlugField(max_length=300, unique=True)),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(10)])),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now_add=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_threads', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_threads', to='forum.forumcategory')),
            ],
            options={
                'ordering': ['-is_pinned', '-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(5)])),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_posts', to=settings.AUTH_USER_MODEL)),
                ('parent_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='forum.forumpost')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_posts', to='forum.forumthread')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ForumThreadLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='forum.forumthread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumThreadSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='forum.forumthread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumPostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='forum.forumpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['post'], name='forum_forum_post_id_a1c0d7_idx'), models.Index(fields=['user'], name='forum_forum_user_id_e423b4_idx')],
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='forumthread',
            index=models.Index(fields=['-last_activity'], name='forum_forum_last_ac_b10a12_idx'),
        ),
        migrations.AddIndex(
            model_name='forumthread',
            index=models.Index(fields=['category', '-created_at'], name='forum_forum_categor_e1fd1f_idx'),
        ),
        migrations.AddIndex(
            model_name='forumthread',
            index=models.Index(fields=['author'], name='forum_forum_author__26a0a3_idx'),
        ),
        migrations.AddIndex(
            model_name='forumpost',
            index=models.Index(fields=['thread', 'created_at'], name='forum_forum_thread__31fcba_idx'),
        ),
        migrations.AddIndex(
            model_name='forumpost',
            index=models.Index(fields=['author'], name='forum_forum_author__5fa047_idx'),
        ),
        migrations.AddIndex(
            model_name='forumthreadlike',
            index=models.Index(fields=['thread'], name='forum_forum_thread__f59288_idx'),
        ),
        migrations.AddIndex(
            model_name='forumthreadlike',
            index=models.Index(fields=['user'], name='forum_forum_user_id_82efda_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='forumthreadlike',
            unique_together={('thread', 'user')},
        ),
        migrations.AddIndex(
            model_name='forumthreadsubscription',
            index=models.Index(fields=['user', 'is_active'], name='forum_forum_user_id_ea7b08_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='forumthreadsubscription',
            unique_together={('thread', 'user')},
        ),
    ]
