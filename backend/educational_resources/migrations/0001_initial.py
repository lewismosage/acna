# Generated by Django 5.2.5 on 2025-09-08 10:53

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CaseStudySubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('submitted_by', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=100)),
                ('excerpt', models.TextField()),
                ('full_content', models.TextField(blank=True, null=True)),
                ('impact', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(choices=[('Pending Review', 'Pending Review'), ('Under Review', 'Under Review'), ('Approved', 'Approved'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Pending Review', max_length=20)),
                ('review_notes', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.CharField(blank=True, max_length=200, null=True)),
                ('attachments', models.JSONField(default=list)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='EducationalResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('full_description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('Epilepsy', 'Epilepsy'), ('Cerebral Palsy', 'Cerebral Palsy'), ('Neurodevelopment', 'Neurodevelopment'), ('Nutrition', 'Nutrition'), ('Seizures', 'Seizures'), ('Rehabilitation', 'Rehabilitation'), ('General', 'General'), ('Research', 'Research'), ('Training', 'Training')], max_length=50)),
                ('resource_type', models.CharField(choices=[('Fact Sheet', 'Fact Sheet'), ('Case Study', 'Case Study'), ('Video', 'Video'), ('Document', 'Document'), ('Slide Deck', 'Slide Deck'), ('Interactive', 'Interactive'), ('Webinar', 'Webinar'), ('Toolkit', 'Toolkit')], max_length=20)),
                ('condition', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft'), ('Under Review', 'Under Review'), ('Archived', 'Archived')], default='Draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='resources/images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif', 'webp'])])),
                ('image_url', models.URLField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='resources/files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'ppt', 'pptx'])])),
                ('file_url', models.URLField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('languages', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('target_audience', models.JSONField(default=list)),
                ('related_conditions', models.JSONField(default=list)),
                ('learning_objectives', models.JSONField(default=list)),
                ('prerequisites', models.JSONField(default=list)),
                ('references', models.JSONField(default=list)),
                ('age_group', models.CharField(blank=True, max_length=50, null=True)),
                ('difficulty', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], default='Beginner', max_length=20)),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('file_size', models.CharField(blank=True, max_length=50, null=True)),
                ('file_format', models.CharField(blank=True, max_length=50, null=True)),
                ('author', models.CharField(max_length=200)),
                ('reviewed_by', models.CharField(blank=True, max_length=200, null=True)),
                ('institution', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('impact_statement', models.TextField(blank=True, null=True)),
                ('accreditation', models.CharField(blank=True, max_length=200, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('publication_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='educational_resources.educationalresource')),
            ],
            options={
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='educational_resources.educationalresource')),
            ],
            options={
                'unique_together': {('resource', 'ip_address')},
            },
        ),
    ]
